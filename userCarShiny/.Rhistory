x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
secret='<SECRET>')
shinyapps::setAccountInfo(name='charlescopley',
token='E2EF5FDF45FF192B0322C3CBE65F5402',
secret='<SECRET>')
shinyapps::setAccountInfo(name='charlescopley',
token='E2EF5FDF45FF192B0322C3CBE65F5402',
secret='lE3sJpjDomuUblnt6ZAaWU5Xv2NkHiqOb2qz/mg0')
shiny::runApp('Seafile/charles-1/work/2015/Coursera/DevelopingDataProducts')
pwd
ls
setwd("~/Seafile/charles-1/work/2015/carPrices/usedCarPrices/shinyio")
shinyapps::deployApp('~/Seafile/charles-1/work/2015/carPrices/usedCarPrices/shinyio/')
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(nnet)
library(MASS)
library(e1071)
library(corrplot)
library(randomForest)
library(gbm)
require(caret)
source('./functions.R')
dataToyota<-read.csv2("toyota.csv")
dataMercedes<-read.csv2("mercedes.csv")
dataNissan<-read.csv2("nissan.csv")
dataBMW<-read.csv2("bmw.csv")
dataKia<-read.csv2("kia.csv")
dataMazda<-read.csv2("mazda.csv")
dataFord<-read.csv2("ford.csv")
dataPeugeot<-read.csv2("peugeot.csv")
dataChevrolet<-read.csv2("chevrolet.csv")
dataHonda<-read.csv2("honda.csv")
dataHyundai<-read.csv2("hyundai.csv")
dataVolvo<-read.csv2("volvo.csv")
dataRenault<-read.csv2("renault.csv")
dataVolkswagen<-read.csv2("volkswagen.csv")
dataAudi<-read.csv2("audi.csv")
dataSubaru<-read.csv2("subaru.csv")
dataraw<-rbind(dataToyota,dataMercedes,dataNissan,dataBMW,dataKia,dataMazda,dataFord,dataPeugeot,dataChevrolet,dataHonda,dataHyundai,
dataVolvo,dataRenault,dataVolkswagen,dataAudi,dataSubaru)
mileageBreaks <- c(0,10000,20000,50000,100000,120000,140000,160000,180000,
200000,300000,500000,1000000,2000000)
priceBreaks <- c(seq(from=0,by=20000, to=100000),seq(from=125000,by=25000, to=300000),
seq(from=350000,by=50000, to=600000),seq(from=700000,by=100000, to=3500000))
#clean the data
dataclean<-cleanData(dataraw)
#create data features
data<-featureCreation(dataclean,mileageBreaks,priceBreaks)
#separate the purchases from the training data now that they are both in the same format
setwd("~/Seafile/charles-1/work/2015/carPrices/usedCarPrices")
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(nnet)
library(MASS)
library(e1071)
library(corrplot)
library(randomForest)
library(gbm)
require(caret)
source('./functions.R')
dataToyota<-read.csv2("toyota.csv")
dataMercedes<-read.csv2("mercedes.csv")
dataNissan<-read.csv2("nissan.csv")
dataBMW<-read.csv2("bmw.csv")
dataKia<-read.csv2("kia.csv")
dataMazda<-read.csv2("mazda.csv")
dataFord<-read.csv2("ford.csv")
dataPeugeot<-read.csv2("peugeot.csv")
dataChevrolet<-read.csv2("chevrolet.csv")
dataHonda<-read.csv2("honda.csv")
dataHyundai<-read.csv2("hyundai.csv")
dataVolvo<-read.csv2("volvo.csv")
dataRenault<-read.csv2("renault.csv")
dataVolkswagen<-read.csv2("volkswagen.csv")
dataAudi<-read.csv2("audi.csv")
dataSubaru<-read.csv2("subaru.csv")
dataraw<-rbind(dataToyota,dataMercedes,dataNissan,dataBMW,dataKia,dataMazda,dataFord,dataPeugeot,dataChevrolet,dataHonda,dataHyundai,
dataVolvo,dataRenault,dataVolkswagen,dataAudi,dataSubaru)
mileageBreaks <- c(0,10000,20000,50000,100000,120000,140000,160000,180000,
200000,300000,500000,1000000,2000000)
priceBreaks <- c(seq(from=0,by=20000, to=100000),seq(from=125000,by=25000, to=300000),
seq(from=350000,by=50000, to=600000),seq(from=700000,by=100000, to=3500000))
#clean the data
dataclean<-cleanData(dataraw)
#create data features
data<-featureCreation(dataclean,mileageBreaks,priceBreaks)
#separate the purchases from the training data now that they are both in the same format
formula <-PriceFeat ~  Year + Make + Model+ MileageFeat + Engine
set.seed(1234)
ind <- sample(3, nrow(data), replace=TRUE, prob=c(0.7,0.2,0.1))
training <- data[ind==1, ]
validation<- data[ind==2, ]
test <- data[ind==3, ]
#interpolated value
fitBoost<-gbm(formula,data= as.data.frame(training), n.trees=50,interaction.depth=9, shrinkage=0.1,n.minobsinnode=10,distribution="gaussian")
PredictionBoost <- predict(fitBoost, as.data.frame(training),n.trees=50)
ValidationBoost <- predict(fitBoost, as.data.frame(validation),n.trees=50)
PricesOfInterest <- predict(fitBoost, as.data.frame(purchaseVehicle),n.trees=50)
save(ValidationBoost)
save(PredictionBoost,'predict.RData')
save(PredictionBoost,file='predict.RData')
load('predict.RData')
dataToyota<-read.csv2("toyota.csv")
dataMercedes<-read.csv2("mercedes.csv")
dataNissan<-read.csv2("nissan.csv")
dataBMW<-read.csv2("bmw.csv")
dataKia<-read.csv2("kia.csv")
dataMazda<-read.csv2("mazda.csv")
dataFord<-read.csv2("ford.csv")
dataPeugeot<-read.csv2("peugeot.csv")
dataChevrolet<-read.csv2("chevrolet.csv")
dataHonda<-read.csv2("honda.csv")
dataHyundai<-read.csv2("hyundai.csv")
dataVolvo<-read.csv2("volvo.csv")
dataRenault<-read.csv2("renault.csv")
dataVolkswagen<-read.csv2("volkswagen.csv")
dataAudi<-read.csv2("audi.csv")
dataSubaru<-read.csv2("subaru.csv")
dataraw<-rbind(dataToyota,dataMercedes,dataNissan,dataBMW,dataKia,dataMazda,dataFord,dataPeugeot,dataChevrolet,dataHonda,dataHyundai,
dataVolvo,dataRenault,dataVolkswagen,dataAudi,dataSubaru)
purchaseVehicle<-data[1:13,]
dataraw<-rbind(dataToyota,dataMercedes,dataNissan,dataBMW,dataKia,dataMazda,dataFord,dataPeugeot,dataChevrolet,dataHonda,dataHyundai,
dataVolvo,dataRenault,dataVolkswagen,dataAudi,dataSubaru)
mileageBreaks <- c(0,10000,20000,50000,100000,120000,140000,160000,180000,
200000,300000,500000,1000000,2000000)
priceBreaks <- c(seq(from=0,by=20000, to=100000),seq(from=125000,by=25000, to=300000),
seq(from=350000,by=50000, to=600000),seq(from=700000,by=100000, to=3500000))
#clean the data
dataclean<-cleanData(dataraw)
#create data features
data<-featureCreation(dataclean,mileageBreaks,priceBreaks)
setwd("~/Seafile/charles-1/work/2015/carPrices/usedCarPrices")
dataraw<-rbind(dataToyota,dataMercedes,dataNissan,dataBMW,dataKia,dataMazda,dataFord,dataPeugeot,dataChevrolet,dataHonda,dataHyundai,
dataVolvo,dataRenault,dataVolkswagen,dataAudi,dataSubaru)
mileageBreaks <- c(0,10000,20000,50000,100000,120000,140000,160000,180000,
200000,300000,500000,1000000,2000000)
priceBreaks <- c(seq(from=0,by=20000, to=100000),seq(from=125000,by=25000, to=300000),
seq(from=350000,by=50000, to=600000),seq(from=700000,by=100000, to=3500000))
#clean the data
dataclean<-cleanData(dataraw)
#create data features
data<-featureCreation(dataclean,mileageBreaks,priceBreaks)
#separate the purchases from the training data now that they are both in the same format
source('./functions.R')
dataraw<-rbind(dataToyota,dataMercedes,dataNissan,dataBMW,dataKia,dataMazda,dataFord,dataPeugeot,dataChevrolet,dataHonda,dataHyundai,
dataVolvo,dataRenault,dataVolkswagen,dataAudi,dataSubaru)
mileageBreaks <- c(0,10000,20000,50000,100000,120000,140000,160000,180000,
200000,300000,500000,1000000,2000000)
priceBreaks <- c(seq(from=0,by=20000, to=100000),seq(from=125000,by=25000, to=300000),
seq(from=350000,by=50000, to=600000),seq(from=700000,by=100000, to=3500000))
#clean the data
dataclean<-cleanData(dataraw)
#create data features
data<-featureCreation(dataclean,mileageBreaks,priceBreaks)
purchaseVehicle<-data[1:13,]
purchaseVehicle
purchaseVehicle<-data[1,]
purchaseVehicle
save(purchaseVehicle,file='purchase.RData')
load('predict.RData')
load('purchase.RData')
load('predict.RData')
load('purchase.RData')
PricesOfInterest <- predict(fitBoost, as.data.frame(purchaseVehicle),n.trees=50)
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(nnet)
library(MASS)
library(e1071)
library(corrplot)
library(randomForest)
library(gbm)
require(caret)
source('./functions.R')
dataToyota<-read.csv2("toyota.csv")
dataMercedes<-read.csv2("mercedes.csv")
dataNissan<-read.csv2("nissan.csv")
dataBMW<-read.csv2("bmw.csv")
dataKia<-read.csv2("kia.csv")
dataMazda<-read.csv2("mazda.csv")
dataFord<-read.csv2("ford.csv")
dataPeugeot<-read.csv2("peugeot.csv")
dataChevrolet<-read.csv2("chevrolet.csv")
dataHonda<-read.csv2("honda.csv")
dataHyundai<-read.csv2("hyundai.csv")
dataVolvo<-read.csv2("volvo.csv")
dataRenault<-read.csv2("renault.csv")
dataVolkswagen<-read.csv2("volkswagen.csv")
dataAudi<-read.csv2("audi.csv")
dataSubaru<-read.csv2("subaru.csv")
dataraw<-rbind(dataToyota,dataMercedes,dataNissan,dataBMW,dataKia,dataMazda,dataFord,dataPeugeot,dataChevrolet,dataHonda,dataHyundai,
dataVolvo,dataRenault,dataVolkswagen,dataAudi,dataSubaru)
mileageBreaks <- c(0,10000,20000,50000,100000,120000,140000,160000,180000,
200000,300000,500000,1000000,2000000)
priceBreaks <- c(seq(from=0,by=20000, to=100000),seq(from=125000,by=25000, to=300000),
seq(from=350000,by=50000, to=600000),seq(from=700000,by=100000, to=3500000))
#clean the data
dataclean<-cleanData(dataraw)
#create data features
data<-featureCreation(dataclean,mileageBreaks,priceBreaks)
#separate the purchases from the training data now that they are both in the same format
#----------------create the model cars we want the price for
purchaseVehicle<-data[1:13,]
purchaseVehicle$Price=c(0,0,0,0,0,0,0,0,0,0,0,0,0)
purchaseVehicle$Year=c(2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2013,2007,2007)
purchaseVehicle$Mileage=c(120000,150000,200000,120000,120000,120000,120000,
120000,120000,120000,68000,130000,125000)
purchaseVehicle$Make=c('AUDI','AUDI','AUDI','AUDI','AUDI','AUDI','AUDI','AUDI',
'AUDI','AUDI','AUDI','MERCEDES-BENZ','VOLKSWAGEN')
purchaseVehicle$Model=c('A4','A4','A4','A4','A4','A4','A4','A4','A4','A4','A4','C-CLASS','POLO')
purchaseVehicle$Engine=c(1.8,1.8,1.8,1.8,1.8,1.8,1.8,1.8,1.8,1.8,1.8,2.4,1.6)
purchaseVehicle<-featureCreation(purchaseVehicle,mileageBreaks,priceBreaks)
labelsMake <- levels(data$Make)
labelsModel <- levels(data$Model)
labelsEngine <- levels(data$Engine)
labelsMileageFeat <- levels(data$MileageFeat)
purchaseVehicle$Make<- factor(purchaseVehicle$Make, levels=labelsMake)
purchaseVehicle$Model<- factor(purchaseVehicle$Model, levels=labelsModel)
purchaseVehicle$Engine<- factor(purchaseVehicle$Engine, levels=labelsEngine)
purchaseVehicle$MileageFeat<- factor(as.character(purchaseVehicle$MileageFeat), levels=labelsMileageFeat)
#--------------------------------------------------
formula <-PriceFeat ~  Year + Make + Model+ MileageFeat + Engine
set.seed(1234)
ind <- sample(3, nrow(data), replace=TRUE, prob=c(0.7,0.2,0.1))
training <- data[ind==1, ]
validation<- data[ind==2, ]
test <- data[ind==3, ]
#interpolated value
#--------------BOOSTED FITTING
fitBoost<-gbm(formula,data= as.data.frame(training), n.trees=50,interaction.depth=9, shrinkage=0.1,n.minobsinnode=10,distribution="gaussian")
PredictionBoost <- predict(fitBoost, as.data.frame(training),n.trees=50)
save(fitBoost,file='fitBoost.RData')
load('fitBoost.RData')
load('predict.RData')
load('purchase.RData')
load('fitBoost.RData')
PricesOfInterest <- predict(fitBoost, as.data.frame(purchaseVehicle),n.trees=50)
PricesOfInterest
PricesOfInterest <- predict(fitBoost, as.data.frame(purchaseVehicle),n.trees=50)
x<-rbind(floor(PricesOfInterest),ceiling(PricesOfInterest))
y<-rbind(priceBreaks[x[1,]],priceBreaks[x[2,]])
a<-predict(lm(y~x),newdata=list(x=PricesOfInterest))
tt<-1:length(priceBreaks)
b<-approx(x=tt, y=priceBreaks, PricesOfInterest, method = "linear")
mileageBreaks <- c(0,10000,20000,50000,100000,120000,140000,160000,180000,
200000,300000,500000,1000000,2000000)
priceBreaks <- c(seq(from=0,by=20000, to=100000),seq(from=125000,by=25000, to=300000),
seq(from=350000,by=50000, to=600000),seq(from=700000,by=100000, to=3500000))
PricesOfInterest <- predict(fitBoost, as.data.frame(purchaseVehicle),n.trees=50)
x<-rbind(floor(PricesOfInterest),ceiling(PricesOfInterest))
y<-rbind(priceBreaks[x[1,]],priceBreaks[x[2,]])
a<-predict(lm(y~x),newdata=list(x=PricesOfInterest))
tt<-1:length(priceBreaks)
b<-approx(x=tt, y=priceBreaks, PricesOfInterest, method = "linear")
b
shiny::runApp('shinyio')
setwd("~/Seafile/charles-1/work/2015/carPrices/usedCarPrices/shinyio")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
x
y
tt<-1:length(priceBreaks)
a<-predict(lm(y~x),newdata=list(x=PricesOfInterest))
y
x
PricesOfInterest
y
x
lm(y~x)
lm(y~x,newdata=PricesOfInterest)
predict(lm(y~x,newdata=PricesOfInterest))
predict(lm(y~x),newdata=PricesOfInterest))
predict(lm(y~x),PricesOfInterest))
PricesOfInterest
b<-approx(x=tt, y=priceBreaks, PricesOfInterest, method = "linear")
b
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
load('predict.RData')
load('purchase.RData')
load('fitBoost.RData')
source('../functions.R')
mileageBreaks <- c(0,10000,20000,50000,100000,120000,140000,160000,180000,
200000,300000,500000,1000000,2000000)
priceBreaks <- c(seq(from=0,by=20000, to=100000),seq(from=125000,by=25000, to=300000),
seq(from=350000,by=50000, to=600000),seq(from=700000,by=100000, to=3500000))
purchaseVehicle$Model <-'TOYOTA'
PricesOfInterest <- predict(fitBoost, as.data.frame(purchaseVehicle),n.trees=50)
PricesOfInterest
x<-rbind(floor(PricesOfInterest),ceiling(PricesOfInterest))
y<-rbind(priceBreaks[x[1,]],priceBreaks[x[2,]])
tt<-1:length(priceBreaks)
b<-approx(x=tt, y=priceBreaks, PricesOfInterest, method = "linear")
b
purchaseVehicle
shiny::runApp()
shiny::runApp()
purchaseVehicle
shiny::runApp()
purchaseVehicle$Make <-'TOYOTA'
purchaseVehicle$Model <-'COROLLA'
purchaseVehicle$Year<-'2005'
purchaseVehicle
shiny::runApp()
purchaseVehicle<-featureCreation(purchaseVehicle,mileageBreaks,priceBreaks)
purchaseVehicle$Make <-'TOYOTA'
purchaseVehicle$Model <-'COROLLA'
purchaseVehicle$Year<-'2005'
purchaseVehicle<-featureCreation(purchaseVehicle,mileageBreaks,priceBreaks)
labelsMake <- levels(data$Make)
labelsModel <- levels(data$Model)
labelsEngine <- levels(data$Engine)
labelsMileageFeat <- levels(data$MileageFeat)
purchaseVehicle$Make<- factor(purchaseVehicle$Make, levels=labelsMake)
source('../functions.R')
labelsMake <- levels(data$Make)
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(nnet)
library(MASS)
library(e1071)
library(corrplot)
library(randomForest)
library(gbm)
require(caret)
source('./functions.R')
dataToyota<-read.csv2("toyota.csv")
dataMercedes<-read.csv2("mercedes.csv")
dataNissan<-read.csv2("nissan.csv")
dataBMW<-read.csv2("bmw.csv")
dataKia<-read.csv2("kia.csv")
dataMazda<-read.csv2("mazda.csv")
dataFord<-read.csv2("ford.csv")
dataPeugeot<-read.csv2("peugeot.csv")
dataChevrolet<-read.csv2("chevrolet.csv")
dataHonda<-read.csv2("honda.csv")
dataHyundai<-read.csv2("hyundai.csv")
dataVolvo<-read.csv2("volvo.csv")
dataRenault<-read.csv2("renault.csv")
dataVolkswagen<-read.csv2("volkswagen.csv")
dataAudi<-read.csv2("audi.csv")
dataSubaru<-read.csv2("subaru.csv")
dataraw<-rbind(dataToyota,dataMercedes,dataNissan,dataBMW,dataKia,dataMazda,dataFord,dataPeugeot,dataChevrolet,dataHonda,dataHyundai,
dataVolvo,dataRenault,dataVolkswagen,dataAudi,dataSubaru)
mileageBreaks <- c(0,10000,20000,50000,100000,120000,140000,160000,180000,
200000,300000,500000,1000000,2000000)
priceBreaks <- c(seq(from=0,by=20000, to=100000),seq(from=125000,by=25000, to=300000),
seq(from=350000,by=50000, to=600000),seq(from=700000,by=100000, to=3500000))
#clean the data
dataclean<-cleanData(dataraw)
#create data features
data<-featureCreation(dataclean,mileageBreaks,priceBreaks)
#separate the purchases from the training data now that they are both in the same format
#----------------create the model cars we want the price for
purchaseVehicle<-data[1:13,]
purchaseVehicle$Price=c(0,0,0,0,0,0,0,0,0,0,0,0,0)
purchaseVehicle$Year=c(2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2013,2007,2007)
purchaseVehicle$Mileage=c(120000,150000,200000,120000,120000,120000,120000,
120000,120000,120000,68000,130000,125000)
purchaseVehicle$Make=c('AUDI','AUDI','AUDI','AUDI','AUDI','AUDI','AUDI','AUDI',
'AUDI','AUDI','AUDI','MERCEDES-BENZ','VOLKSWAGEN')
purchaseVehicle$Model=c('A4','A4','A4','A4','A4','A4','A4','A4','A4','A4','A4','C-CLASS','POLO')
purchaseVehicle$Engine=c(1.8,1.8,1.8,1.8,1.8,1.8,1.8,1.8,1.8,1.8,1.8,2.4,1.6)
setwd("~/Seafile/charles-1/work/2015/carPrices/usedCarPrices")
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(nnet)
library(MASS)
library(e1071)
library(corrplot)
library(randomForest)
library(gbm)
require(caret)
source('./functions.R')
dataToyota<-read.csv2("toyota.csv")
dataMercedes<-read.csv2("mercedes.csv")
dataNissan<-read.csv2("nissan.csv")
dataBMW<-read.csv2("bmw.csv")
dataKia<-read.csv2("kia.csv")
dataMazda<-read.csv2("mazda.csv")
dataFord<-read.csv2("ford.csv")
dataPeugeot<-read.csv2("peugeot.csv")
dataChevrolet<-read.csv2("chevrolet.csv")
dataHonda<-read.csv2("honda.csv")
dataHyundai<-read.csv2("hyundai.csv")
dataVolvo<-read.csv2("volvo.csv")
dataRenault<-read.csv2("renault.csv")
dataVolkswagen<-read.csv2("volkswagen.csv")
dataAudi<-read.csv2("audi.csv")
dataSubaru<-read.csv2("subaru.csv")
dataraw<-rbind(dataToyota,dataMercedes,dataNissan,dataBMW,dataKia,dataMazda,dataFord,dataPeugeot,dataChevrolet,dataHonda,dataHyundai,
dataVolvo,dataRenault,dataVolkswagen,dataAudi,dataSubaru)
mileageBreaks <- c(0,10000,20000,50000,100000,120000,140000,160000,180000,
200000,300000,500000,1000000,2000000)
priceBreaks <- c(seq(from=0,by=20000, to=100000),seq(from=125000,by=25000, to=300000),
seq(from=350000,by=50000, to=600000),seq(from=700000,by=100000, to=3500000))
#clean the data
dataclean<-cleanData(dataraw)
#create data features
data<-featureCreation(dataclean,mileageBreaks,priceBreaks)
save(data,'data.RData')
save(data,file='data.RData')
load('data.RData')
source('../functions.R')
setwd("~/Seafile/charles-1/work/2015/carPrices/usedCarPrices/shinyio")
mileageBreaks <- c(0,10000,20000,50000,100000,120000,140000,160000,180000,
200000,300000,500000,1000000,2000000)
priceBreaks <- c(seq(from=0,by=20000, to=100000),seq(from=125000,by=25000, to=300000),
purchaseVehicle$Make <-'TOYOTA'
purchaseVehicle$Model <-'COROLLA'
load('predict.RData')
load('purchase.RData')
load('fitBoost.RData')
load('data.RData')
purchaseVehicle$Make <-'TOYOTA'
purchaseVehicle$Model <-'COROLLA'
purchaseVehicle$Year<-'2005'
purchaseVehicle<-featureCreation(purchaseVehicle,mileageBreaks,priceBreaks)
labelsMake <- levels(data$Make)
labelsModel <- levels(data$Model)
labelsEngine <- levels(data$Engine)
labelsMileageFeat <- levels(data$MileageFeat)
purchaseVehicle$Make<- factor(purchaseVehicle$Make, levels=labelsMake)
purchaseVehicle$Model<- factor(purchaseVehicle$Model, levels=labelsModel)
purchaseVehicle$Engine<- factor(purchaseVehicle$Engine, levels=labelsEngine)
purchaseVehicle$MileageFeat<- factor(as.character(purchaseVehicle$MileageFeat), levels=labelsMileageFeat)
PricesOfInterest <- predict(fitBoost, as.data.frame(purchaseVehicle),n.trees=50)
x<-rbind(floor(PricesOfInterest),ceiling(PricesOfInterest))
y<-rbind(priceBreaks[x[1,]],priceBreaks[x[2,]])
tt<-1:length(priceBreaks)
b<-approx(x=tt, y=priceBreaks, PricesOfInterest, method = "linear")
isolate(paste(b$y))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shinyapps::deployApp('~/Seafile/charles-1/work/2015/carPrices/usedCarPrices/shinyio/')
shinyapps::setAccountInfo(name='charlescopley',
token='E2EF5FDF45FF192B0322C3CBE65F5402',
secret='lE3sJpjDomuUblnt6ZAaWU5Xv2NkHiqOb2qz/mg0')
library(shinyapps)
shinyapps::deployApp('~/Seafile/charles-1/work/2015/carPrices/usedCarPrices/shinyio/')
library(shinyapps)
shinyapps::deployApp('~/Seafile/charles-1/work/2015/carPrices/usedCarPrices/shinyio/')
shinyapps::setAccountInfo(name='charlescopley',
token='E2EF5FDF45FF192B0322C3CBE65F5402',
secret='lE3sJpjDomuUblnt6ZAaWU5Xv2NkHiqOb2qz/mg0')
library(shinyapps)
shinyapps::deployApp('~/Seafile/charles-1/work/2015/carPrices/usedCarPrices/shinyio/')
setwd("~/Seafile/charles-1/work/2015/carPrices/usedCarPrices/shinyio")
shinyapps::setAccountInfo(name='charlescopley',
token='E2EF5FDF45FF192B0322C3CBE65F5402',
secret='lE3sJpjDomuUblnt6ZAaWU5Xv2NkHiqOb2qz/mg0')
shinyapps::deployApp('~/Seafile/charles-1/work/2015/carPrices/usedCarPrices/shinyio/')
shiny::runApp()
setAccountInfo(name='charlescopley',
token='E2EF5FDF45FF192B0322C3CBE65F5402',
secret='lE3sJpjDomuUblnt6ZAaWU5Xv2NkHiqOb2qz/mg0')
shiny::runApp()
shinyapps::setAccountInfo(name='charlescopley',
token='E2EF5FDF45FF192B0322C3CBE65F5402',
secret='lE3sJpjDomuUblnt6ZAaWU5Xv2NkHiqOb2qz/mg0')
shiny::runApp()
